components:
  answer_builder:
    init_parameters:
      pattern: The answer is "(valid|invalid)".
      reference_pattern: null
    type: haystack.components.builders.answer_builder.AnswerBuilder
  embedder:
    init_parameters:
      api_base_url: null
      api_key:
        env_vars:
        - OPENAI_API_KEY
        strict: true
        type: env_var
      dimensions: null
      model: text-embedding-3-small
      organization: null
      prefix: ''
      suffix: ''
    type: haystack.components.embedders.openai_text_embedder.OpenAITextEmbedder
  generator:
    init_parameters:
      api_base_url: null
      api_key:
        env_vars:
        - OPENAI_API_KEY
        strict: true
        type: env_var
      generation_kwargs: {}
      model: gpt-4o-mini
      organization: null
      streaming_callback: null
      system_prompt: null
    type: haystack.components.generators.openai.OpenAIGenerator
  prompt_builder:
    init_parameters:
      required_variables: null
      template: "\n\n        Given these documents, answer the question.\n\n     \
        \   Your answer is used within a pipeline and must follow the following format:\n\
        \        \"The answer is \"valid\"\" or \"The answer is \"invalid\"\" with\
        \ quotation marks. Also allowed are \"yes\" or \"no\", \"true\" or \"false\"\
        , \"1\" or \"0\".\n        After stating your answer, explain your answer\
        \ in detail.\n\n        Example:\n        Question: London is the capital\
        \ of France.\n        Answer: \"false\", because the capital of France is\
        \ Paris, not London.\n\n        Documents:\n\n        {% for doc in documents\
        \ %}\n        {{ doc.content }}\n\n        {% endfor %}        \n\n      \
        \  Question: {{query}}\n\n\n        Answer:\n\n        "
      variables: null
    type: haystack.components.builders.prompt_builder.PromptBuilder
  ranker:
    init_parameters:
      top_k: null
      word_count_threshold: null
    type: haystack.components.rankers.lost_in_the_middle.LostInTheMiddleRanker
  retriever:
    init_parameters:
      document_store:
        init_parameters:
          bm25_algorithm: BM25L
          bm25_parameters: {}
          bm25_tokenization_regex: (?u)\b\w\w+\b
          embedding_similarity_function: dot_product
          index: e44a81b3-0a5b-438c-90eb-d85e87950e48
        type: haystack.document_stores.in_memory.document_store.InMemoryDocumentStore
      filter_policy: replace
      filters: null
      return_embedding: false
      scale_score: false
      top_k: 10
    type: haystack.components.retrievers.in_memory.embedding_retriever.InMemoryEmbeddingRetriever
connection_type_validation: true
connections:
- receiver: retriever.query_embedding
  sender: embedder.embedding
- receiver: ranker.documents
  sender: retriever.documents
- receiver: prompt_builder.documents
  sender: ranker.documents
- receiver: generator.prompt
  sender: prompt_builder.prompt
- receiver: answer_builder.replies
  sender: generator.replies
max_runs_per_component: 100
metadata: {}
