components:
  llm:
    init_parameters:
      api_base_url: null
      api_key:
        env_vars:
        - OPENAI_API_KEY
        strict: true
        type: env_var
      generation_kwargs: {}
      model: gpt-4o-mini
      organization: null
      streaming_callback: null
      system_prompt: null
    type: haystack.components.generators.openai.OpenAIGenerator
  prompt_builder:
    init_parameters:
      required_variables: null
      template: '
      Bitte gib deine Antwort in einem vollständigen Satz an und zitiere die entsprechenden Gesetze oder Urteile, die deine Aussage stützen. 
      
      Achte darauf, dass deine Antwort lesbar formatiert ist. Nutze Leerzeilen, Absätze und Aufzählungen, um deine Argumentation klar und strukturiert zu präsentieren.

      Im folgenden siehst du eine Auswahl von Gesetzen bzw. Urteilen.
      ---------------------
      {% for doc in documents %}\

      {{ doc.content }}

      {% endfor %}
      ---------------------
      
      Anhand dieser Informationen sollst du bitte die folgende Frage beantworten: {{query}}
    
      Versuche deine Antwort in einer einfachen Sprache für Laien zu geben. Zitiere immer deine Quelle mit dem entsprechenden Paragraphen oder Urteil, wenn du eine Aussage machst.

      '
      variables: null
    type: haystack.components.builders.prompt_builder.PromptBuilder
  bm25_retriever:
    init_parameters:
      document_store:
        init_parameters:
          bm25_algorithm: BM25L
          bm25_parameters: &id001 {}
          bm25_tokenization_regex: (?u)\b\w\w+\b
          embedding_similarity_function: dot_product
          index: d3e9c471-1c4e-4e3e-9c5a-03aee7147ac1
        type: haystack.document_stores.in_memory.document_store.InMemoryDocumentStore
      filter_policy: replace
      filters: null
      scale_score: false
      top_k: 10
    type: haystack.components.retrievers.in_memory.bm25_retriever.InMemoryBM25Retriever
  embedding_retriever:
    init_parameters:
      document_store:
        init_parameters:
          bm25_algorithm: BM25L
          bm25_parameters: *id001
          bm25_tokenization_regex: (?u)\b\w\w+\b
          embedding_similarity_function: dot_product
          index: d3e9c471-1c4e-4e3e-9c5a-03aee7147ac1
        type: haystack.document_stores.in_memory.document_store.InMemoryDocumentStore
      filter_policy: replace
      filters: null
      return_embedding: false
      scale_score: false
      top_k: 10
    type: haystack.components.retrievers.in_memory.embedding_retriever.InMemoryEmbeddingRetriever
  joiner:
    init_parameters:
      join_mode: merge
      sort_by_score: true
      top_k: 10
      weights: [0.33, 0.67]
    type: haystack.components.joiners.document_joiner.DocumentJoiner
  text_embedder:
    init_parameters:
      api_base_url: null
      api_key:
        env_vars:
        - OPENAI_API_KEY
        strict: true
        type: env_var
      dimensions: null
      model: text-embedding-ada-002
      organization: null
      prefix: ''
      suffix: ''
    type: haystack.components.embedders.openai_text_embedder.OpenAITextEmbedder
  docs_embedder:
    init_parameters:
      api_base_url: null
      api_key:
        env_vars:
        - OPENAI_API_KEY
        strict: true
        type: env_var
      dimensions: null
      model: text-embedding-ada-002
      organization: null
      prefix: ''
      suffix: ''
    type: haystack.components.embedders.openai_document_embedder.OpenAIDocumentEmbedder
connections:
- receiver: llm.prompt
  sender: prompt_builder.prompt
- receiver: prompt_builder.documents
  sender: joiner.documents
- receiver: joiner.documents
  sender: bm25_retriever.documents
- receiver: embedding_retriever.query_embedding
  sender: text_embedder.embedding
- receiver: joiner.documents
  sender: embedding_retriever.documents
max_runs_per_component: 100
metadata: {}